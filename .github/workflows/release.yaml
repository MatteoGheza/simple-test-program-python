name: Release
on: 
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
    #    pytest
  building:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -R requirements.txt
    - name: PyInstaller build
      working-directory: simpletestprogram
      run: |
        pyinstaller simpletestprogram.spec
        pyinstaller simpletestprogram_onefile.spec
    - name: Upload Build
      uses: actions/upload-artifact@v2.1.4
      with:
        name: ${{ matrix.os }}
        path: simpletestprogram/dist/simpletestprogram
    - name: Upload Portable Build
      uses: actions/upload-artifact@v2.1.4
      with:
        name: ${{ matrix.os }}_portable
        path: simpletestprogram/dist/simpletestprogram_portable*
  release:
    needs: building
    name: Release
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: actions/download-artifact@v2
        with:
          path: build_artifacts
      - run: ls -R build_artifacts
      - run: ls -R build_artifacts/*
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: |
          npm i semantic-release -g
          npm i semantic-release/exec -g
          npm i semantic-release/changelog -g
          npm i semantic-release/git -g
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release